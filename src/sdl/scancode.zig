const c = @cImport({
    @cInclude("SDL.h");
});

pub const Scancode = enum(c_uint) {
    sc_0 = c.SDL_SCANCODE_0,
    sc_1 = c.SDL_SCANCODE_1,
    sc_2 = c.SDL_SCANCODE_2,
    sc_3 = c.SDL_SCANCODE_3,
    sc_4 = c.SDL_SCANCODE_4,
    sc_5 = c.SDL_SCANCODE_5,
    sc_6 = c.SDL_SCANCODE_6,
    sc_7 = c.SDL_SCANCODE_7,
    sc_8 = c.SDL_SCANCODE_8,
    sc_9 = c.SDL_SCANCODE_9,
    sc_a = c.SDL_SCANCODE_A,
    sc_ac_back = c.SDL_SCANCODE_AC_BACK,
    sc_ac_bookmarks = c.SDL_SCANCODE_AC_BOOKMARKS,
    sc_ac_forward = c.SDL_SCANCODE_AC_FORWARD,
    sc_ac_home = c.SDL_SCANCODE_AC_HOME,
    sc_ac_refresh = c.SDL_SCANCODE_AC_REFRESH,
    sc_ac_search = c.SDL_SCANCODE_AC_SEARCH,
    sc_ac_stop = c.SDL_SCANCODE_AC_STOP,
    sc_again = c.SDL_SCANCODE_AGAIN,
    sc_alt_erase = c.SDL_SCANCODE_ALTERASE,
    sc_apostrophe = c.SDL_SCANCODE_APOSTROPHE,
    sc_application = c.SDL_SCANCODE_APPLICATION,
    sc_audio_mute = c.SDL_SCANCODE_AUDIOMUTE,
    sc_audio_next = c.SDL_SCANCODE_AUDIONEXT,
    sc_audio_play = c.SDL_SCANCODE_AUDIOPLAY,
    sc_audio_prev = c.SDL_SCANCODE_AUDIOPREV,
    sc_audio_stop = c.SDL_SCANCODE_AUDIOSTOP,
    sc_b = c.SDL_SCANCODE_B,
    sc_backslash = c.SDL_SCANCODE_BACKSLASH,
    sc_backspace = c.SDL_SCANCODE_BACKSPACE,
    sc_brightness_down = c.SDL_SCANCODE_BRIGHTNESSDOWN,
    sc_brightness_up = c.SDL_SCANCODE_BRIGHTNESSUP,
    sc_c = c.SDL_SCANCODE_C,
    sc_calculator = c.SDL_SCANCODE_CALCULATOR,
    sc_cancel = c.SDL_SCANCODE_CANCEL,
    sc_capslock = c.SDL_SCANCODE_CAPSLOCK,
    sc_clear = c.SDL_SCANCODE_CLEAR,
    sc_clear_again = c.SDL_SCANCODE_CLEARAGAIN,
    sc_comma = c.SDL_SCANCODE_COMMA,
    sc_computer = c.SDL_SCANCODE_COMPUTER,
    sc_copy = c.SDL_SCANCODE_COPY,
    sc_crsel = c.SDL_SCANCODE_CRSEL,
    sc_currency_subunit = c.SDL_SCANCODE_CURRENCYSUBUNIT,
    sc_currency_unit = c.SDL_SCANCODE_CURRENCYUNIT,
    sc_cut = c.SDL_SCANCODE_CUT,
    sc_d = c.SDL_SCANCODE_D,
    sc_decimal_separator = c.SDL_SCANCODE_DECIMALSEPARATOR,
    sc_delete = c.SDL_SCANCODE_DELETE,
    sc_display_switch = c.SDL_SCANCODE_DISPLAYSWITCH,
    sc_down = c.SDL_SCANCODE_DOWN,
    sc_e = c.SDL_SCANCODE_E,
    sc_eject = c.SDL_SCANCODE_EJECT,
    sc_end = c.SDL_SCANCODE_END,
    sc_equals = c.SDL_SCANCODE_EQUALS,
    sc_escape = c.SDL_SCANCODE_ESCAPE,
    sc_execute = c.SDL_SCANCODE_EXECUTE,
    sc_exsel = c.SDL_SCANCODE_EXSEL,
    sc_f = c.SDL_SCANCODE_F,
    sc_f1 = c.SDL_SCANCODE_F1,
    sc_f2 = c.SDL_SCANCODE_F2,
    sc_f3 = c.SDL_SCANCODE_F3,
    sc_f4 = c.SDL_SCANCODE_F4,
    sc_f5 = c.SDL_SCANCODE_F5,
    sc_f6 = c.SDL_SCANCODE_F6,
    sc_f7 = c.SDL_SCANCODE_F7,
    sc_f8 = c.SDL_SCANCODE_F8,
    sc_f9 = c.SDL_SCANCODE_F9,
    sc_f10 = c.SDL_SCANCODE_F10,
    sc_f11 = c.SDL_SCANCODE_F11,
    sc_f12 = c.SDL_SCANCODE_F12,
    sc_f13 = c.SDL_SCANCODE_F13,
    sc_f14 = c.SDL_SCANCODE_F14,
    sc_f15 = c.SDL_SCANCODE_F15,
    sc_f16 = c.SDL_SCANCODE_F16,
    sc_f17 = c.SDL_SCANCODE_F17,
    sc_f18 = c.SDL_SCANCODE_F18,
    sc_f19 = c.SDL_SCANCODE_F19,
    sc_f20 = c.SDL_SCANCODE_F20,
    sc_f21 = c.SDL_SCANCODE_F21,
    sc_f22 = c.SDL_SCANCODE_F22,
    sc_f23 = c.SDL_SCANCODE_F23,
    sc_f24 = c.SDL_SCANCODE_F24,
    sc_find = c.SDL_SCANCODE_FIND,
    sc_g = c.SDL_SCANCODE_G,
    sc_grave = c.SDL_SCANCODE_GRAVE,
    sc_h = c.SDL_SCANCODE_H,
    sc_help = c.SDL_SCANCODE_HELP,
    sc_home = c.SDL_SCANCODE_HOME,
    sc_i = c.SDL_SCANCODE_I,
    sc_insert = c.SDL_SCANCODE_INSERT,
    sc_j = c.SDL_SCANCODE_J,
    sc_k = c.SDL_SCANCODE_K,
    sc_keyboard_illum_down = c.SDL_SCANCODE_KBDILLUMDOWN,
    sc_keyboard_illum_toggle = c.SDL_SCANCODE_KBDILLUMTOGGLE,
    sc_keyboard_illum_up = c.SDL_SCANCODE_KBDILLUMUP,
    sc_kp_0 = c.SDL_SCANCODE_KP_0,
    sc_kp_1 = c.SDL_SCANCODE_KP_1,
    sc_kp_2 = c.SDL_SCANCODE_KP_2,
    sc_kp_3 = c.SDL_SCANCODE_KP_3,
    sc_kp_4 = c.SDL_SCANCODE_KP_4,
    sc_kp_5 = c.SDL_SCANCODE_KP_5,
    sc_kp_6 = c.SDL_SCANCODE_KP_6,
    sc_kp_7 = c.SDL_SCANCODE_KP_7,
    sc_kp_8 = c.SDL_SCANCODE_KP_8,
    sc_kp_9 = c.SDL_SCANCODE_KP_9,
    sc_kp_a = c.SDL_SCANCODE_KP_A,
    sc_kp_ampersand = c.SDL_SCANCODE_KP_AMPERSAND,
    sc_kp_at = c.SDL_SCANCODE_KP_AT,
    sc_kp_b = c.SDL_SCANCODE_KP_B,
    sc_kp_backspace = c.SDL_SCANCODE_KP_BACKSPACE,
    sc_kp_binary = c.SDL_SCANCODE_KP_BINARY,
    sc_kp_c = c.SDL_SCANCODE_KP_C,
    sc_kp_clear = c.SDL_SCANCODE_KP_CLEAR,
    sc_kp_clear_entry = c.SDL_SCANCODE_KP_CLEARENTRY,
    sc_kp_colon = c.SDL_SCANCODE_KP_COLON,
    sc_kp_comma = c.SDL_SCANCODE_KP_COMMA,
    sc_kp_d = c.SDL_SCANCODE_KP_D,
    sc_kp_double_ampersand = c.SDL_SCANCODE_KP_DBLAMPERSAND,
    sc_kp_decimal = c.SDL_SCANCODE_KP_DECIMAL,
    sc_kp_divide = c.SDL_SCANCODE_KP_DIVIDE,
    sc_kp_e = c.SDL_SCANCODE_KP_E,
    sc_kp_enter = c.SDL_SCANCODE_KP_ENTER,
    sc_kp_equals = c.SDL_SCANCODE_KP_EQUALS,
    sc_kp_equals_as_400 = c.SDL_SCANCODE_KP_EQUALSAS400,
    sc_kp_exclam = c.SDL_SCANCODE_KP_EXCLAM,
    sc_kp_f = c.SDL_SCANCODE_KP_F,
    sc_kp_greater = c.SDL_SCANCODE_KP_GREATER,
    sc_kp_hash = c.SDL_SCANCODE_KP_HASH,
    sc_kp_hexadecimal = c.SDL_SCANCODE_KP_HEXADECIMAL,
    sc_kp_left_brace = c.SDL_SCANCODE_KP_LEFTBRACE,
    sc_kp_left_paren = c.SDL_SCANCODE_KP_LEFTPAREN,
    sc_kp_less = c.SDL_SCANCODE_KP_LESS,
    sc_kp_mem_add = c.SDL_SCANCODE_KP_MEMADD,
    sc_kp_mem_clear = c.SDL_SCANCODE_KP_MEMCLEAR,
    sc_kp_mem_divide = c.SDL_SCANCODE_KP_MEMDIVIDE,
    sc_kp_mem_multiply = c.SDL_SCANCODE_KP_MEMMULTIPLY,
    sc_kp_mem_recall = c.SDL_SCANCODE_KP_MEMRECALL,
    sc_kp_mem_store = c.SDL_SCANCODE_KP_MEMSTORE,
    sc_kp_mem_subtract = c.SDL_SCANCODE_KP_MEMSUBTRACT,
    sc_kp_minus = c.SDL_SCANCODE_KP_MINUS,
    sc_kp_multiply = c.SDL_SCANCODE_KP_MULTIPLY,
    sc_kp_octal = c.SDL_SCANCODE_KP_OCTAL,
    sc_kp_percent = c.SDL_SCANCODE_KP_PERCENT,
    sc_kp_period = c.SDL_SCANCODE_KP_PERIOD,
    sc_kp_plus = c.SDL_SCANCODE_KP_PLUS,
    sc_kp_plus_minus = c.SDL_SCANCODE_KP_PLUSMINUS,
    sc_kp_power = c.SDL_SCANCODE_KP_POWER,
    sc_kp_right_brace = c.SDL_SCANCODE_KP_RIGHTBRACE,
    sc_kp_right_paren = c.SDL_SCANCODE_KP_RIGHTPAREN,
    sc_kp_space = c.SDL_SCANCODE_KP_SPACE,
    sc_kp_tab = c.SDL_SCANCODE_KP_TAB,
    sc_kp_pipe = c.SDL_SCANCODE_KP_VERTICALBAR,
    sc_kp_xor = c.SDL_SCANCODE_KP_XOR,
    sc_l = c.SDL_SCANCODE_L,
    sc_left_alt = c.SDL_SCANCODE_LALT,
    sc_left_ctrl = c.SDL_SCANCODE_LCTRL,
    sc_left = c.SDL_SCANCODE_LEFT,
    sc_left_bracket = c.SDL_SCANCODE_LEFTBRACKET,
    sc_left_gui = c.SDL_SCANCODE_LGUI,
    sc_left_shift = c.SDL_SCANCODE_LSHIFT,
    sc_m = c.SDL_SCANCODE_M,
    sc_mail = c.SDL_SCANCODE_MAIL,
    sc_media_select = c.SDL_SCANCODE_MEDIASELECT,
    sc_menu = c.SDL_SCANCODE_MENU,
    sc_minus = c.SDL_SCANCODE_MINUS,
    sc_mode_switch = c.SDL_SCANCODE_MODE,
    sc_mute = c.SDL_SCANCODE_MUTE,
    sc_n = c.SDL_SCANCODE_N,
    sc_numlock = c.SDL_SCANCODE_NUMLOCKCLEAR,
    sc_o = c.SDL_SCANCODE_O,
    sc_oper = c.SDL_SCANCODE_OPER,
    sc_out = c.SDL_SCANCODE_OUT,
    sc_p = c.SDL_SCANCODE_P,
    sc_page_down = c.SDL_SCANCODE_PAGEDOWN,
    sc_page_up = c.SDL_SCANCODE_PAGEUP,
    sc_paste = c.SDL_SCANCODE_PASTE,
    sc_pause = c.SDL_SCANCODE_PAUSE,
    sc_period = c.SDL_SCANCODE_PERIOD,
    sc_power = c.SDL_SCANCODE_POWER,
    sc_print_screen = c.SDL_SCANCODE_PRINTSCREEN,
    sc_prior = c.SDL_SCANCODE_PRIOR,
    sc_q = c.SDL_SCANCODE_Q,
    sc_r = c.SDL_SCANCODE_R,
    sc_right_alt = c.SDL_SCANCODE_RALT,
    sc_right_ctrl = c.SDL_SCANCODE_RCTRL,
    sc_return = c.SDL_SCANCODE_RETURN,
    sc_return2 = c.SDL_SCANCODE_RETURN2,
    sc_right_gui = c.SDL_SCANCODE_RGUI,
    sc_right = c.SDL_SCANCODE_RIGHT,
    sc_right_bracket = c.SDL_SCANCODE_RIGHTBRACKET,
    sc_right_shift = c.SDL_SCANCODE_RSHIFT,
    sc_s = c.SDL_SCANCODE_S,
    sc_scroll_lock = c.SDL_SCANCODE_SCROLLLOCK,
    sc_semicolon = c.SDL_SCANCODE_SEMICOLON,
    sc_separator = c.SDL_SCANCODE_SEPARATOR,
    sc_slash = c.SDL_SCANCODE_SLASH,
    sc_sleep = c.SDL_SCANCODE_SLEEP,
    sc_space = c.SDL_SCANCODE_SPACE,
    sc_stop = c.SDL_SCANCODE_STOP,
    sc_sys_req = c.SDL_SCANCODE_SYSREQ,
    sc_t = c.SDL_SCANCODE_T,
    sc_tab = c.SDL_SCANCODE_TAB,
    sc_thousand_separator = c.SDL_SCANCODE_THOUSANDSSEPARATOR,
    sc_u = c.SDL_SCANCODE_U,
    sc_undo = c.SDL_SCANCODE_UNDO,
    sc_unknown = c.SDL_SCANCODE_UNKNOWN,
    sc_up = c.SDL_SCANCODE_UP,
    sc_v = c.SDL_SCANCODE_V,
    sc_volume_down = c.SDL_SCANCODE_VOLUMEDOWN,
    sc_volume_up = c.SDL_SCANCODE_VOLUMEUP,
    sc_w = c.SDL_SCANCODE_W,
    sc_www = c.SDL_SCANCODE_WWW,
    sc_x = c.SDL_SCANCODE_X,
    sc_y = c.SDL_SCANCODE_Y,
    sc_z = c.SDL_SCANCODE_Z,
};
